name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job for Android and Web
  build-android-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Add Android platform support
        run: |
          flutter create --platforms android . --project-name ifaa
          flutter pub get
          
          # Install ImageMagick for icon conversion
          sudo apt-get update
          sudo apt-get install -y imagemagick
          
          # Convert ifaa-1.png to ICO format for web favicon
          convert assets/icons/ifaa-1.png -resize 32x32 web/favicon.ico
          
          # Convert ifaa-1.png to different PNG formats for web icons
          convert assets/icons/ifaa-1.png -resize 192x192 web/icons/Icon-192.png
          convert assets/icons/ifaa-1.png -resize 512x512 web/icons/Icon-512.png
          convert assets/icons/ifaa-1.png -resize 192x192 web/icons/Icon-maskable-192.png
          convert assets/icons/ifaa-1.png -resize 512x512 web/icons/Icon-maskable-512.png
          
          # Update Kotlin version for compatibility
          cd android
          sed -i 's/ext.kotlin_version = .*/ext.kotlin_version = "1.9.24"/' build.gradle
          sed -i 's/id "org.jetbrains.kotlin.android" version .*/id "org.jetbrains.kotlin.android" version "1.9.24" apply false/' settings.gradle
          
          # Copy iffa-1.png to Android app icon locations
          mkdir -p app/src/main/res/mipmap-mdpi
          mkdir -p app/src/main/res/mipmap-hdpi  
          mkdir -p app/src/main/res/mipmap-xhdpi
          mkdir -p app/src/main/res/mipmap-xxhdpi
          mkdir -p app/src/main/res/mipmap-xxxhdpi
          
          # Convert ifaa-1.png to proper Android PNG sizes
          convert ../assets/icons/ifaa-1.png -resize 48x48 app/src/main/res/mipmap-mdpi/ic_launcher.png
          convert ../assets/icons/ifaa-1.png -resize 72x72 app/src/main/res/mipmap-hdpi/ic_launcher.png
          convert ../assets/icons/ifaa-1.png -resize 96x96 app/src/main/res/mipmap-xhdpi/ic_launcher.png
          convert ../assets/icons/ifaa-1.png -resize 144x144 app/src/main/res/mipmap-xxhdpi/ic_launcher.png
          convert ../assets/icons/ifaa-1.png -resize 192x192 app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
          
          cd ..
      
      - name: Build web
        run: flutter build web --release --web-renderer html --base-href "/IFAA/"
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ifaa-app-android-release
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload web artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build/web'

  # Build job for iOS
  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Add iOS platform support
        run: |
          flutter create --platforms ios . --project-name ifaa
          flutter pub get
          
          # Install ImageMagick for icon conversion (macOS)
          brew install imagemagick
          
          # Create iOS app icon set directory
          mkdir -p ios/Runner/Assets.xcassets/AppIcon.appiconset
          
          # Convert ifaa-1.png to iOS app icon sizes
          convert assets/icons/ifaa-1.png -resize 20x20 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png
          convert assets/icons/ifaa-1.png -resize 40x40 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png
          convert assets/icons/ifaa-1.png -resize 60x60 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png
          convert assets/icons/ifaa-1.png -resize 29x29 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png
          convert assets/icons/ifaa-1.png -resize 58x58 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png
          convert assets/icons/ifaa-1.png -resize 87x87 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png
          convert assets/icons/ifaa-1.png -resize 40x40 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png
          convert assets/icons/ifaa-1.png -resize 80x80 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png
          convert assets/icons/ifaa-1.png -resize 120x120 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png
          convert assets/icons/ifaa-1.png -resize 120x120 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png
          convert assets/icons/ifaa-1.png -resize 180x180 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png
          convert assets/icons/ifaa-1.png -resize 76x76 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png
          convert assets/icons/ifaa-1.png -resize 152x152 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png
          convert assets/icons/ifaa-1.png -resize 167x167 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png
          convert assets/icons/ifaa-1.png -resize 1024x1024 ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png
      
      - name: Build iOS app (no signing)
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -destination generic/platform=iOS -archivePath build/Runner.xcarchive archive CODE_SIGNING_ALLOWED=NO
          cd ..
      
      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ifaa-app-ios-archive
          path: ios/build/Runner.xcarchive
          retention-days: 30

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-android-web
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4